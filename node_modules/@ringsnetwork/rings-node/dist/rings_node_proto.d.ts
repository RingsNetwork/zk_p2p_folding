import * as $protobuf from "protobufjs";
import Long = require("long");
/** Namespace rings_node. */
export namespace rings_node {

    /** Properties of a PeerInfo. */
    interface IPeerInfo {

        /** PeerInfo did */
        did?: (string|null);

        /** PeerInfo state */
        state?: (string|null);
    }

    /** Represents a PeerInfo. */
    class PeerInfo implements IPeerInfo {

        /**
         * Constructs a new PeerInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IPeerInfo);

        /** PeerInfo did. */
        public did: string;

        /** PeerInfo state. */
        public state: string;

        /**
         * Creates a new PeerInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PeerInfo instance
         */
        public static create(properties?: rings_node.IPeerInfo): rings_node.PeerInfo;

        /**
         * Encodes the specified PeerInfo message. Does not implicitly {@link rings_node.PeerInfo.verify|verify} messages.
         * @param message PeerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IPeerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PeerInfo message, length delimited. Does not implicitly {@link rings_node.PeerInfo.verify|verify} messages.
         * @param message PeerInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IPeerInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PeerInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PeerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.PeerInfo;

        /**
         * Decodes a PeerInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PeerInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.PeerInfo;

        /**
         * Verifies a PeerInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PeerInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PeerInfo
         */
        public static fromObject(object: { [k: string]: any }): rings_node.PeerInfo;

        /**
         * Creates a plain object from a PeerInfo message. Also converts values to other types if specified.
         * @param message PeerInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.PeerInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PeerInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for PeerInfo
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a ConnectPeerViaHttpRequest. */
    interface IConnectPeerViaHttpRequest {

        /** ConnectPeerViaHttpRequest url */
        url?: (string|null);
    }

    /** Represents a ConnectPeerViaHttpRequest. */
    class ConnectPeerViaHttpRequest implements IConnectPeerViaHttpRequest {

        /**
         * Constructs a new ConnectPeerViaHttpRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IConnectPeerViaHttpRequest);

        /** ConnectPeerViaHttpRequest url. */
        public url: string;

        /**
         * Creates a new ConnectPeerViaHttpRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConnectPeerViaHttpRequest instance
         */
        public static create(properties?: rings_node.IConnectPeerViaHttpRequest): rings_node.ConnectPeerViaHttpRequest;

        /**
         * Encodes the specified ConnectPeerViaHttpRequest message. Does not implicitly {@link rings_node.ConnectPeerViaHttpRequest.verify|verify} messages.
         * @param message ConnectPeerViaHttpRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IConnectPeerViaHttpRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConnectPeerViaHttpRequest message, length delimited. Does not implicitly {@link rings_node.ConnectPeerViaHttpRequest.verify|verify} messages.
         * @param message ConnectPeerViaHttpRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IConnectPeerViaHttpRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConnectPeerViaHttpRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConnectPeerViaHttpRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.ConnectPeerViaHttpRequest;

        /**
         * Decodes a ConnectPeerViaHttpRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConnectPeerViaHttpRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.ConnectPeerViaHttpRequest;

        /**
         * Verifies a ConnectPeerViaHttpRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConnectPeerViaHttpRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConnectPeerViaHttpRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.ConnectPeerViaHttpRequest;

        /**
         * Creates a plain object from a ConnectPeerViaHttpRequest message. Also converts values to other types if specified.
         * @param message ConnectPeerViaHttpRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.ConnectPeerViaHttpRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConnectPeerViaHttpRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for ConnectPeerViaHttpRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a ConnectPeerViaHttpResponse. */
    interface IConnectPeerViaHttpResponse {

        /** ConnectPeerViaHttpResponse peer */
        peer?: (rings_node.IPeerInfo|null);
    }

    /** Represents a ConnectPeerViaHttpResponse. */
    class ConnectPeerViaHttpResponse implements IConnectPeerViaHttpResponse {

        /**
         * Constructs a new ConnectPeerViaHttpResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IConnectPeerViaHttpResponse);

        /** ConnectPeerViaHttpResponse peer. */
        public peer?: (rings_node.IPeerInfo|null);

        /**
         * Creates a new ConnectPeerViaHttpResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConnectPeerViaHttpResponse instance
         */
        public static create(properties?: rings_node.IConnectPeerViaHttpResponse): rings_node.ConnectPeerViaHttpResponse;

        /**
         * Encodes the specified ConnectPeerViaHttpResponse message. Does not implicitly {@link rings_node.ConnectPeerViaHttpResponse.verify|verify} messages.
         * @param message ConnectPeerViaHttpResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IConnectPeerViaHttpResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConnectPeerViaHttpResponse message, length delimited. Does not implicitly {@link rings_node.ConnectPeerViaHttpResponse.verify|verify} messages.
         * @param message ConnectPeerViaHttpResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IConnectPeerViaHttpResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConnectPeerViaHttpResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConnectPeerViaHttpResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.ConnectPeerViaHttpResponse;

        /**
         * Decodes a ConnectPeerViaHttpResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConnectPeerViaHttpResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.ConnectPeerViaHttpResponse;

        /**
         * Verifies a ConnectPeerViaHttpResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConnectPeerViaHttpResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConnectPeerViaHttpResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.ConnectPeerViaHttpResponse;

        /**
         * Creates a plain object from a ConnectPeerViaHttpResponse message. Also converts values to other types if specified.
         * @param message ConnectPeerViaHttpResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.ConnectPeerViaHttpResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConnectPeerViaHttpResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for ConnectPeerViaHttpResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a ConnectWithDidRequest. */
    interface IConnectWithDidRequest {

        /** ConnectWithDidRequest did */
        did?: (string|null);
    }

    /** Represents a ConnectWithDidRequest. */
    class ConnectWithDidRequest implements IConnectWithDidRequest {

        /**
         * Constructs a new ConnectWithDidRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IConnectWithDidRequest);

        /** ConnectWithDidRequest did. */
        public did: string;

        /**
         * Creates a new ConnectWithDidRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConnectWithDidRequest instance
         */
        public static create(properties?: rings_node.IConnectWithDidRequest): rings_node.ConnectWithDidRequest;

        /**
         * Encodes the specified ConnectWithDidRequest message. Does not implicitly {@link rings_node.ConnectWithDidRequest.verify|verify} messages.
         * @param message ConnectWithDidRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IConnectWithDidRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConnectWithDidRequest message, length delimited. Does not implicitly {@link rings_node.ConnectWithDidRequest.verify|verify} messages.
         * @param message ConnectWithDidRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IConnectWithDidRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConnectWithDidRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConnectWithDidRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.ConnectWithDidRequest;

        /**
         * Decodes a ConnectWithDidRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConnectWithDidRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.ConnectWithDidRequest;

        /**
         * Verifies a ConnectWithDidRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConnectWithDidRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConnectWithDidRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.ConnectWithDidRequest;

        /**
         * Creates a plain object from a ConnectWithDidRequest message. Also converts values to other types if specified.
         * @param message ConnectWithDidRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.ConnectWithDidRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConnectWithDidRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for ConnectWithDidRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a ConnectWithDidResponse. */
    interface IConnectWithDidResponse {
    }

    /** Represents a ConnectWithDidResponse. */
    class ConnectWithDidResponse implements IConnectWithDidResponse {

        /**
         * Constructs a new ConnectWithDidResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IConnectWithDidResponse);

        /**
         * Creates a new ConnectWithDidResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConnectWithDidResponse instance
         */
        public static create(properties?: rings_node.IConnectWithDidResponse): rings_node.ConnectWithDidResponse;

        /**
         * Encodes the specified ConnectWithDidResponse message. Does not implicitly {@link rings_node.ConnectWithDidResponse.verify|verify} messages.
         * @param message ConnectWithDidResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IConnectWithDidResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConnectWithDidResponse message, length delimited. Does not implicitly {@link rings_node.ConnectWithDidResponse.verify|verify} messages.
         * @param message ConnectWithDidResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IConnectWithDidResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConnectWithDidResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConnectWithDidResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.ConnectWithDidResponse;

        /**
         * Decodes a ConnectWithDidResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConnectWithDidResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.ConnectWithDidResponse;

        /**
         * Verifies a ConnectWithDidResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConnectWithDidResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConnectWithDidResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.ConnectWithDidResponse;

        /**
         * Creates a plain object from a ConnectWithDidResponse message. Also converts values to other types if specified.
         * @param message ConnectWithDidResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.ConnectWithDidResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConnectWithDidResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for ConnectWithDidResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SeedPeer. */
    interface ISeedPeer {

        /** SeedPeer did */
        did?: (string|null);

        /** SeedPeer url */
        url?: (string|null);
    }

    /** Represents a SeedPeer. */
    class SeedPeer implements ISeedPeer {

        /**
         * Constructs a new SeedPeer.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.ISeedPeer);

        /** SeedPeer did. */
        public did: string;

        /** SeedPeer url. */
        public url: string;

        /**
         * Creates a new SeedPeer instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SeedPeer instance
         */
        public static create(properties?: rings_node.ISeedPeer): rings_node.SeedPeer;

        /**
         * Encodes the specified SeedPeer message. Does not implicitly {@link rings_node.SeedPeer.verify|verify} messages.
         * @param message SeedPeer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.ISeedPeer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SeedPeer message, length delimited. Does not implicitly {@link rings_node.SeedPeer.verify|verify} messages.
         * @param message SeedPeer message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.ISeedPeer, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SeedPeer message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SeedPeer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.SeedPeer;

        /**
         * Decodes a SeedPeer message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SeedPeer
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.SeedPeer;

        /**
         * Verifies a SeedPeer message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SeedPeer message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SeedPeer
         */
        public static fromObject(object: { [k: string]: any }): rings_node.SeedPeer;

        /**
         * Creates a plain object from a SeedPeer message. Also converts values to other types if specified.
         * @param message SeedPeer
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.SeedPeer, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SeedPeer to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SeedPeer
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a ConnectWithSeedRequest. */
    interface IConnectWithSeedRequest {

        /** ConnectWithSeedRequest peers */
        peers?: (rings_node.ISeedPeer[]|null);
    }

    /** Represents a ConnectWithSeedRequest. */
    class ConnectWithSeedRequest implements IConnectWithSeedRequest {

        /**
         * Constructs a new ConnectWithSeedRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IConnectWithSeedRequest);

        /** ConnectWithSeedRequest peers. */
        public peers: rings_node.ISeedPeer[];

        /**
         * Creates a new ConnectWithSeedRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConnectWithSeedRequest instance
         */
        public static create(properties?: rings_node.IConnectWithSeedRequest): rings_node.ConnectWithSeedRequest;

        /**
         * Encodes the specified ConnectWithSeedRequest message. Does not implicitly {@link rings_node.ConnectWithSeedRequest.verify|verify} messages.
         * @param message ConnectWithSeedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IConnectWithSeedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConnectWithSeedRequest message, length delimited. Does not implicitly {@link rings_node.ConnectWithSeedRequest.verify|verify} messages.
         * @param message ConnectWithSeedRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IConnectWithSeedRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConnectWithSeedRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConnectWithSeedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.ConnectWithSeedRequest;

        /**
         * Decodes a ConnectWithSeedRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConnectWithSeedRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.ConnectWithSeedRequest;

        /**
         * Verifies a ConnectWithSeedRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConnectWithSeedRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConnectWithSeedRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.ConnectWithSeedRequest;

        /**
         * Creates a plain object from a ConnectWithSeedRequest message. Also converts values to other types if specified.
         * @param message ConnectWithSeedRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.ConnectWithSeedRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConnectWithSeedRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for ConnectWithSeedRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a ConnectWithSeedResponse. */
    interface IConnectWithSeedResponse {
    }

    /** Represents a ConnectWithSeedResponse. */
    class ConnectWithSeedResponse implements IConnectWithSeedResponse {

        /**
         * Constructs a new ConnectWithSeedResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IConnectWithSeedResponse);

        /**
         * Creates a new ConnectWithSeedResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ConnectWithSeedResponse instance
         */
        public static create(properties?: rings_node.IConnectWithSeedResponse): rings_node.ConnectWithSeedResponse;

        /**
         * Encodes the specified ConnectWithSeedResponse message. Does not implicitly {@link rings_node.ConnectWithSeedResponse.verify|verify} messages.
         * @param message ConnectWithSeedResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IConnectWithSeedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ConnectWithSeedResponse message, length delimited. Does not implicitly {@link rings_node.ConnectWithSeedResponse.verify|verify} messages.
         * @param message ConnectWithSeedResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IConnectWithSeedResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ConnectWithSeedResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ConnectWithSeedResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.ConnectWithSeedResponse;

        /**
         * Decodes a ConnectWithSeedResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ConnectWithSeedResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.ConnectWithSeedResponse;

        /**
         * Verifies a ConnectWithSeedResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ConnectWithSeedResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ConnectWithSeedResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.ConnectWithSeedResponse;

        /**
         * Creates a plain object from a ConnectWithSeedResponse message. Also converts values to other types if specified.
         * @param message ConnectWithSeedResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.ConnectWithSeedResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ConnectWithSeedResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for ConnectWithSeedResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a ListPeersRequest. */
    interface IListPeersRequest {
    }

    /** Represents a ListPeersRequest. */
    class ListPeersRequest implements IListPeersRequest {

        /**
         * Constructs a new ListPeersRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IListPeersRequest);

        /**
         * Creates a new ListPeersRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ListPeersRequest instance
         */
        public static create(properties?: rings_node.IListPeersRequest): rings_node.ListPeersRequest;

        /**
         * Encodes the specified ListPeersRequest message. Does not implicitly {@link rings_node.ListPeersRequest.verify|verify} messages.
         * @param message ListPeersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IListPeersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ListPeersRequest message, length delimited. Does not implicitly {@link rings_node.ListPeersRequest.verify|verify} messages.
         * @param message ListPeersRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IListPeersRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ListPeersRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ListPeersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.ListPeersRequest;

        /**
         * Decodes a ListPeersRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ListPeersRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.ListPeersRequest;

        /**
         * Verifies a ListPeersRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ListPeersRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ListPeersRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.ListPeersRequest;

        /**
         * Creates a plain object from a ListPeersRequest message. Also converts values to other types if specified.
         * @param message ListPeersRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.ListPeersRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ListPeersRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for ListPeersRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a ListPeersResponse. */
    interface IListPeersResponse {

        /** ListPeersResponse peers */
        peers?: (rings_node.IPeerInfo[]|null);
    }

    /** Represents a ListPeersResponse. */
    class ListPeersResponse implements IListPeersResponse {

        /**
         * Constructs a new ListPeersResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IListPeersResponse);

        /** ListPeersResponse peers. */
        public peers: rings_node.IPeerInfo[];

        /**
         * Creates a new ListPeersResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns ListPeersResponse instance
         */
        public static create(properties?: rings_node.IListPeersResponse): rings_node.ListPeersResponse;

        /**
         * Encodes the specified ListPeersResponse message. Does not implicitly {@link rings_node.ListPeersResponse.verify|verify} messages.
         * @param message ListPeersResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IListPeersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified ListPeersResponse message, length delimited. Does not implicitly {@link rings_node.ListPeersResponse.verify|verify} messages.
         * @param message ListPeersResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IListPeersResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a ListPeersResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns ListPeersResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.ListPeersResponse;

        /**
         * Decodes a ListPeersResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns ListPeersResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.ListPeersResponse;

        /**
         * Verifies a ListPeersResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a ListPeersResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns ListPeersResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.ListPeersResponse;

        /**
         * Creates a plain object from a ListPeersResponse message. Also converts values to other types if specified.
         * @param message ListPeersResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.ListPeersResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this ListPeersResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for ListPeersResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a CreateOfferRequest. */
    interface ICreateOfferRequest {

        /** CreateOfferRequest did */
        did?: (string|null);
    }

    /** Represents a CreateOfferRequest. */
    class CreateOfferRequest implements ICreateOfferRequest {

        /**
         * Constructs a new CreateOfferRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.ICreateOfferRequest);

        /** CreateOfferRequest did. */
        public did: string;

        /**
         * Creates a new CreateOfferRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CreateOfferRequest instance
         */
        public static create(properties?: rings_node.ICreateOfferRequest): rings_node.CreateOfferRequest;

        /**
         * Encodes the specified CreateOfferRequest message. Does not implicitly {@link rings_node.CreateOfferRequest.verify|verify} messages.
         * @param message CreateOfferRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.ICreateOfferRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CreateOfferRequest message, length delimited. Does not implicitly {@link rings_node.CreateOfferRequest.verify|verify} messages.
         * @param message CreateOfferRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.ICreateOfferRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CreateOfferRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CreateOfferRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.CreateOfferRequest;

        /**
         * Decodes a CreateOfferRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CreateOfferRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.CreateOfferRequest;

        /**
         * Verifies a CreateOfferRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CreateOfferRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CreateOfferRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.CreateOfferRequest;

        /**
         * Creates a plain object from a CreateOfferRequest message. Also converts values to other types if specified.
         * @param message CreateOfferRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.CreateOfferRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CreateOfferRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for CreateOfferRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a CreateOfferResponse. */
    interface ICreateOfferResponse {

        /** CreateOfferResponse offer */
        offer?: (string|null);
    }

    /** Represents a CreateOfferResponse. */
    class CreateOfferResponse implements ICreateOfferResponse {

        /**
         * Constructs a new CreateOfferResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.ICreateOfferResponse);

        /** CreateOfferResponse offer. */
        public offer: string;

        /**
         * Creates a new CreateOfferResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns CreateOfferResponse instance
         */
        public static create(properties?: rings_node.ICreateOfferResponse): rings_node.CreateOfferResponse;

        /**
         * Encodes the specified CreateOfferResponse message. Does not implicitly {@link rings_node.CreateOfferResponse.verify|verify} messages.
         * @param message CreateOfferResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.ICreateOfferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified CreateOfferResponse message, length delimited. Does not implicitly {@link rings_node.CreateOfferResponse.verify|verify} messages.
         * @param message CreateOfferResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.ICreateOfferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a CreateOfferResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns CreateOfferResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.CreateOfferResponse;

        /**
         * Decodes a CreateOfferResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns CreateOfferResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.CreateOfferResponse;

        /**
         * Verifies a CreateOfferResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a CreateOfferResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns CreateOfferResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.CreateOfferResponse;

        /**
         * Creates a plain object from a CreateOfferResponse message. Also converts values to other types if specified.
         * @param message CreateOfferResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.CreateOfferResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this CreateOfferResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for CreateOfferResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an AnswerOfferRequest. */
    interface IAnswerOfferRequest {

        /** AnswerOfferRequest offer */
        offer?: (string|null);
    }

    /** Represents an AnswerOfferRequest. */
    class AnswerOfferRequest implements IAnswerOfferRequest {

        /**
         * Constructs a new AnswerOfferRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IAnswerOfferRequest);

        /** AnswerOfferRequest offer. */
        public offer: string;

        /**
         * Creates a new AnswerOfferRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AnswerOfferRequest instance
         */
        public static create(properties?: rings_node.IAnswerOfferRequest): rings_node.AnswerOfferRequest;

        /**
         * Encodes the specified AnswerOfferRequest message. Does not implicitly {@link rings_node.AnswerOfferRequest.verify|verify} messages.
         * @param message AnswerOfferRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IAnswerOfferRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AnswerOfferRequest message, length delimited. Does not implicitly {@link rings_node.AnswerOfferRequest.verify|verify} messages.
         * @param message AnswerOfferRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IAnswerOfferRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AnswerOfferRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AnswerOfferRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.AnswerOfferRequest;

        /**
         * Decodes an AnswerOfferRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AnswerOfferRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.AnswerOfferRequest;

        /**
         * Verifies an AnswerOfferRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AnswerOfferRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AnswerOfferRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.AnswerOfferRequest;

        /**
         * Creates a plain object from an AnswerOfferRequest message. Also converts values to other types if specified.
         * @param message AnswerOfferRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.AnswerOfferRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AnswerOfferRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for AnswerOfferRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an AnswerOfferResponse. */
    interface IAnswerOfferResponse {

        /** AnswerOfferResponse answer */
        answer?: (string|null);
    }

    /** Represents an AnswerOfferResponse. */
    class AnswerOfferResponse implements IAnswerOfferResponse {

        /**
         * Constructs a new AnswerOfferResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IAnswerOfferResponse);

        /** AnswerOfferResponse answer. */
        public answer: string;

        /**
         * Creates a new AnswerOfferResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AnswerOfferResponse instance
         */
        public static create(properties?: rings_node.IAnswerOfferResponse): rings_node.AnswerOfferResponse;

        /**
         * Encodes the specified AnswerOfferResponse message. Does not implicitly {@link rings_node.AnswerOfferResponse.verify|verify} messages.
         * @param message AnswerOfferResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IAnswerOfferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AnswerOfferResponse message, length delimited. Does not implicitly {@link rings_node.AnswerOfferResponse.verify|verify} messages.
         * @param message AnswerOfferResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IAnswerOfferResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AnswerOfferResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AnswerOfferResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.AnswerOfferResponse;

        /**
         * Decodes an AnswerOfferResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AnswerOfferResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.AnswerOfferResponse;

        /**
         * Verifies an AnswerOfferResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AnswerOfferResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AnswerOfferResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.AnswerOfferResponse;

        /**
         * Creates a plain object from an AnswerOfferResponse message. Also converts values to other types if specified.
         * @param message AnswerOfferResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.AnswerOfferResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AnswerOfferResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for AnswerOfferResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an AcceptAnswerRequest. */
    interface IAcceptAnswerRequest {

        /** AcceptAnswerRequest answer */
        answer?: (string|null);
    }

    /** Represents an AcceptAnswerRequest. */
    class AcceptAnswerRequest implements IAcceptAnswerRequest {

        /**
         * Constructs a new AcceptAnswerRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IAcceptAnswerRequest);

        /** AcceptAnswerRequest answer. */
        public answer: string;

        /**
         * Creates a new AcceptAnswerRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AcceptAnswerRequest instance
         */
        public static create(properties?: rings_node.IAcceptAnswerRequest): rings_node.AcceptAnswerRequest;

        /**
         * Encodes the specified AcceptAnswerRequest message. Does not implicitly {@link rings_node.AcceptAnswerRequest.verify|verify} messages.
         * @param message AcceptAnswerRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IAcceptAnswerRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AcceptAnswerRequest message, length delimited. Does not implicitly {@link rings_node.AcceptAnswerRequest.verify|verify} messages.
         * @param message AcceptAnswerRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IAcceptAnswerRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AcceptAnswerRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AcceptAnswerRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.AcceptAnswerRequest;

        /**
         * Decodes an AcceptAnswerRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AcceptAnswerRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.AcceptAnswerRequest;

        /**
         * Verifies an AcceptAnswerRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AcceptAnswerRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AcceptAnswerRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.AcceptAnswerRequest;

        /**
         * Creates a plain object from an AcceptAnswerRequest message. Also converts values to other types if specified.
         * @param message AcceptAnswerRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.AcceptAnswerRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AcceptAnswerRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for AcceptAnswerRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of an AcceptAnswerResponse. */
    interface IAcceptAnswerResponse {

        /** AcceptAnswerResponse peer */
        peer?: (rings_node.IPeerInfo|null);
    }

    /** Represents an AcceptAnswerResponse. */
    class AcceptAnswerResponse implements IAcceptAnswerResponse {

        /**
         * Constructs a new AcceptAnswerResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IAcceptAnswerResponse);

        /** AcceptAnswerResponse peer. */
        public peer?: (rings_node.IPeerInfo|null);

        /**
         * Creates a new AcceptAnswerResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns AcceptAnswerResponse instance
         */
        public static create(properties?: rings_node.IAcceptAnswerResponse): rings_node.AcceptAnswerResponse;

        /**
         * Encodes the specified AcceptAnswerResponse message. Does not implicitly {@link rings_node.AcceptAnswerResponse.verify|verify} messages.
         * @param message AcceptAnswerResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IAcceptAnswerResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified AcceptAnswerResponse message, length delimited. Does not implicitly {@link rings_node.AcceptAnswerResponse.verify|verify} messages.
         * @param message AcceptAnswerResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IAcceptAnswerResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes an AcceptAnswerResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns AcceptAnswerResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.AcceptAnswerResponse;

        /**
         * Decodes an AcceptAnswerResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns AcceptAnswerResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.AcceptAnswerResponse;

        /**
         * Verifies an AcceptAnswerResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates an AcceptAnswerResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns AcceptAnswerResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.AcceptAnswerResponse;

        /**
         * Creates a plain object from an AcceptAnswerResponse message. Also converts values to other types if specified.
         * @param message AcceptAnswerResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.AcceptAnswerResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this AcceptAnswerResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for AcceptAnswerResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a DisconnectRequest. */
    interface IDisconnectRequest {

        /** DisconnectRequest did */
        did?: (string|null);
    }

    /** Represents a DisconnectRequest. */
    class DisconnectRequest implements IDisconnectRequest {

        /**
         * Constructs a new DisconnectRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IDisconnectRequest);

        /** DisconnectRequest did. */
        public did: string;

        /**
         * Creates a new DisconnectRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DisconnectRequest instance
         */
        public static create(properties?: rings_node.IDisconnectRequest): rings_node.DisconnectRequest;

        /**
         * Encodes the specified DisconnectRequest message. Does not implicitly {@link rings_node.DisconnectRequest.verify|verify} messages.
         * @param message DisconnectRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IDisconnectRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DisconnectRequest message, length delimited. Does not implicitly {@link rings_node.DisconnectRequest.verify|verify} messages.
         * @param message DisconnectRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IDisconnectRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DisconnectRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DisconnectRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.DisconnectRequest;

        /**
         * Decodes a DisconnectRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DisconnectRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.DisconnectRequest;

        /**
         * Verifies a DisconnectRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DisconnectRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DisconnectRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.DisconnectRequest;

        /**
         * Creates a plain object from a DisconnectRequest message. Also converts values to other types if specified.
         * @param message DisconnectRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.DisconnectRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DisconnectRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for DisconnectRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a DisconnectResponse. */
    interface IDisconnectResponse {
    }

    /** Represents a DisconnectResponse. */
    class DisconnectResponse implements IDisconnectResponse {

        /**
         * Constructs a new DisconnectResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IDisconnectResponse);

        /**
         * Creates a new DisconnectResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DisconnectResponse instance
         */
        public static create(properties?: rings_node.IDisconnectResponse): rings_node.DisconnectResponse;

        /**
         * Encodes the specified DisconnectResponse message. Does not implicitly {@link rings_node.DisconnectResponse.verify|verify} messages.
         * @param message DisconnectResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IDisconnectResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DisconnectResponse message, length delimited. Does not implicitly {@link rings_node.DisconnectResponse.verify|verify} messages.
         * @param message DisconnectResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IDisconnectResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DisconnectResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DisconnectResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.DisconnectResponse;

        /**
         * Decodes a DisconnectResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DisconnectResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.DisconnectResponse;

        /**
         * Verifies a DisconnectResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DisconnectResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DisconnectResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.DisconnectResponse;

        /**
         * Creates a plain object from a DisconnectResponse message. Also converts values to other types if specified.
         * @param message DisconnectResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.DisconnectResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DisconnectResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for DisconnectResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SendCustomMessageRequest. */
    interface ISendCustomMessageRequest {

        /** SendCustomMessageRequest destination_did */
        destination_did?: (string|null);

        /** SendCustomMessageRequest data */
        data?: (string|null);
    }

    /** Represents a SendCustomMessageRequest. */
    class SendCustomMessageRequest implements ISendCustomMessageRequest {

        /**
         * Constructs a new SendCustomMessageRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.ISendCustomMessageRequest);

        /** SendCustomMessageRequest destination_did. */
        public destination_did: string;

        /** SendCustomMessageRequest data. */
        public data: string;

        /**
         * Creates a new SendCustomMessageRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SendCustomMessageRequest instance
         */
        public static create(properties?: rings_node.ISendCustomMessageRequest): rings_node.SendCustomMessageRequest;

        /**
         * Encodes the specified SendCustomMessageRequest message. Does not implicitly {@link rings_node.SendCustomMessageRequest.verify|verify} messages.
         * @param message SendCustomMessageRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.ISendCustomMessageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SendCustomMessageRequest message, length delimited. Does not implicitly {@link rings_node.SendCustomMessageRequest.verify|verify} messages.
         * @param message SendCustomMessageRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.ISendCustomMessageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SendCustomMessageRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SendCustomMessageRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.SendCustomMessageRequest;

        /**
         * Decodes a SendCustomMessageRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SendCustomMessageRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.SendCustomMessageRequest;

        /**
         * Verifies a SendCustomMessageRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SendCustomMessageRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SendCustomMessageRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.SendCustomMessageRequest;

        /**
         * Creates a plain object from a SendCustomMessageRequest message. Also converts values to other types if specified.
         * @param message SendCustomMessageRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.SendCustomMessageRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SendCustomMessageRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SendCustomMessageRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SendCustomMessageResponse. */
    interface ISendCustomMessageResponse {
    }

    /** Represents a SendCustomMessageResponse. */
    class SendCustomMessageResponse implements ISendCustomMessageResponse {

        /**
         * Constructs a new SendCustomMessageResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.ISendCustomMessageResponse);

        /**
         * Creates a new SendCustomMessageResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SendCustomMessageResponse instance
         */
        public static create(properties?: rings_node.ISendCustomMessageResponse): rings_node.SendCustomMessageResponse;

        /**
         * Encodes the specified SendCustomMessageResponse message. Does not implicitly {@link rings_node.SendCustomMessageResponse.verify|verify} messages.
         * @param message SendCustomMessageResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.ISendCustomMessageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SendCustomMessageResponse message, length delimited. Does not implicitly {@link rings_node.SendCustomMessageResponse.verify|verify} messages.
         * @param message SendCustomMessageResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.ISendCustomMessageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SendCustomMessageResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SendCustomMessageResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.SendCustomMessageResponse;

        /**
         * Decodes a SendCustomMessageResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SendCustomMessageResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.SendCustomMessageResponse;

        /**
         * Verifies a SendCustomMessageResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SendCustomMessageResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SendCustomMessageResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.SendCustomMessageResponse;

        /**
         * Creates a plain object from a SendCustomMessageResponse message. Also converts values to other types if specified.
         * @param message SendCustomMessageResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.SendCustomMessageResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SendCustomMessageResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SendCustomMessageResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SendBackendMessageRequest. */
    interface ISendBackendMessageRequest {

        /** SendBackendMessageRequest destination_did */
        destination_did?: (string|null);

        /** SendBackendMessageRequest data */
        data?: (string|null);
    }

    /** Represents a SendBackendMessageRequest. */
    class SendBackendMessageRequest implements ISendBackendMessageRequest {

        /**
         * Constructs a new SendBackendMessageRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.ISendBackendMessageRequest);

        /** SendBackendMessageRequest destination_did. */
        public destination_did: string;

        /** SendBackendMessageRequest data. */
        public data: string;

        /**
         * Creates a new SendBackendMessageRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SendBackendMessageRequest instance
         */
        public static create(properties?: rings_node.ISendBackendMessageRequest): rings_node.SendBackendMessageRequest;

        /**
         * Encodes the specified SendBackendMessageRequest message. Does not implicitly {@link rings_node.SendBackendMessageRequest.verify|verify} messages.
         * @param message SendBackendMessageRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.ISendBackendMessageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SendBackendMessageRequest message, length delimited. Does not implicitly {@link rings_node.SendBackendMessageRequest.verify|verify} messages.
         * @param message SendBackendMessageRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.ISendBackendMessageRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SendBackendMessageRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SendBackendMessageRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.SendBackendMessageRequest;

        /**
         * Decodes a SendBackendMessageRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SendBackendMessageRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.SendBackendMessageRequest;

        /**
         * Verifies a SendBackendMessageRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SendBackendMessageRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SendBackendMessageRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.SendBackendMessageRequest;

        /**
         * Creates a plain object from a SendBackendMessageRequest message. Also converts values to other types if specified.
         * @param message SendBackendMessageRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.SendBackendMessageRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SendBackendMessageRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SendBackendMessageRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SendBackendMessageResponse. */
    interface ISendBackendMessageResponse {
    }

    /** Represents a SendBackendMessageResponse. */
    class SendBackendMessageResponse implements ISendBackendMessageResponse {

        /**
         * Constructs a new SendBackendMessageResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.ISendBackendMessageResponse);

        /**
         * Creates a new SendBackendMessageResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SendBackendMessageResponse instance
         */
        public static create(properties?: rings_node.ISendBackendMessageResponse): rings_node.SendBackendMessageResponse;

        /**
         * Encodes the specified SendBackendMessageResponse message. Does not implicitly {@link rings_node.SendBackendMessageResponse.verify|verify} messages.
         * @param message SendBackendMessageResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.ISendBackendMessageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SendBackendMessageResponse message, length delimited. Does not implicitly {@link rings_node.SendBackendMessageResponse.verify|verify} messages.
         * @param message SendBackendMessageResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.ISendBackendMessageResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SendBackendMessageResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SendBackendMessageResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.SendBackendMessageResponse;

        /**
         * Decodes a SendBackendMessageResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SendBackendMessageResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.SendBackendMessageResponse;

        /**
         * Verifies a SendBackendMessageResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SendBackendMessageResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SendBackendMessageResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.SendBackendMessageResponse;

        /**
         * Creates a plain object from a SendBackendMessageResponse message. Also converts values to other types if specified.
         * @param message SendBackendMessageResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.SendBackendMessageResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SendBackendMessageResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SendBackendMessageResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a PublishMessageToTopicRequest. */
    interface IPublishMessageToTopicRequest {

        /** PublishMessageToTopicRequest topic */
        topic?: (string|null);

        /** PublishMessageToTopicRequest data */
        data?: (string|null);
    }

    /** Represents a PublishMessageToTopicRequest. */
    class PublishMessageToTopicRequest implements IPublishMessageToTopicRequest {

        /**
         * Constructs a new PublishMessageToTopicRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IPublishMessageToTopicRequest);

        /** PublishMessageToTopicRequest topic. */
        public topic: string;

        /** PublishMessageToTopicRequest data. */
        public data: string;

        /**
         * Creates a new PublishMessageToTopicRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PublishMessageToTopicRequest instance
         */
        public static create(properties?: rings_node.IPublishMessageToTopicRequest): rings_node.PublishMessageToTopicRequest;

        /**
         * Encodes the specified PublishMessageToTopicRequest message. Does not implicitly {@link rings_node.PublishMessageToTopicRequest.verify|verify} messages.
         * @param message PublishMessageToTopicRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IPublishMessageToTopicRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PublishMessageToTopicRequest message, length delimited. Does not implicitly {@link rings_node.PublishMessageToTopicRequest.verify|verify} messages.
         * @param message PublishMessageToTopicRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IPublishMessageToTopicRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PublishMessageToTopicRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PublishMessageToTopicRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.PublishMessageToTopicRequest;

        /**
         * Decodes a PublishMessageToTopicRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PublishMessageToTopicRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.PublishMessageToTopicRequest;

        /**
         * Verifies a PublishMessageToTopicRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PublishMessageToTopicRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PublishMessageToTopicRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.PublishMessageToTopicRequest;

        /**
         * Creates a plain object from a PublishMessageToTopicRequest message. Also converts values to other types if specified.
         * @param message PublishMessageToTopicRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.PublishMessageToTopicRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PublishMessageToTopicRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for PublishMessageToTopicRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a PublishMessageToTopicResponse. */
    interface IPublishMessageToTopicResponse {
    }

    /** Represents a PublishMessageToTopicResponse. */
    class PublishMessageToTopicResponse implements IPublishMessageToTopicResponse {

        /**
         * Constructs a new PublishMessageToTopicResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IPublishMessageToTopicResponse);

        /**
         * Creates a new PublishMessageToTopicResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns PublishMessageToTopicResponse instance
         */
        public static create(properties?: rings_node.IPublishMessageToTopicResponse): rings_node.PublishMessageToTopicResponse;

        /**
         * Encodes the specified PublishMessageToTopicResponse message. Does not implicitly {@link rings_node.PublishMessageToTopicResponse.verify|verify} messages.
         * @param message PublishMessageToTopicResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IPublishMessageToTopicResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified PublishMessageToTopicResponse message, length delimited. Does not implicitly {@link rings_node.PublishMessageToTopicResponse.verify|verify} messages.
         * @param message PublishMessageToTopicResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IPublishMessageToTopicResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a PublishMessageToTopicResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns PublishMessageToTopicResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.PublishMessageToTopicResponse;

        /**
         * Decodes a PublishMessageToTopicResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns PublishMessageToTopicResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.PublishMessageToTopicResponse;

        /**
         * Verifies a PublishMessageToTopicResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a PublishMessageToTopicResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns PublishMessageToTopicResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.PublishMessageToTopicResponse;

        /**
         * Creates a plain object from a PublishMessageToTopicResponse message. Also converts values to other types if specified.
         * @param message PublishMessageToTopicResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.PublishMessageToTopicResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this PublishMessageToTopicResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for PublishMessageToTopicResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a FetchTopicMessagesRequest. */
    interface IFetchTopicMessagesRequest {

        /** FetchTopicMessagesRequest topic */
        topic?: (string|null);

        /** FetchTopicMessagesRequest skip */
        skip?: (number|Long|null);
    }

    /** Represents a FetchTopicMessagesRequest. */
    class FetchTopicMessagesRequest implements IFetchTopicMessagesRequest {

        /**
         * Constructs a new FetchTopicMessagesRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IFetchTopicMessagesRequest);

        /** FetchTopicMessagesRequest topic. */
        public topic: string;

        /** FetchTopicMessagesRequest skip. */
        public skip: (number|Long);

        /**
         * Creates a new FetchTopicMessagesRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchTopicMessagesRequest instance
         */
        public static create(properties?: rings_node.IFetchTopicMessagesRequest): rings_node.FetchTopicMessagesRequest;

        /**
         * Encodes the specified FetchTopicMessagesRequest message. Does not implicitly {@link rings_node.FetchTopicMessagesRequest.verify|verify} messages.
         * @param message FetchTopicMessagesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IFetchTopicMessagesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FetchTopicMessagesRequest message, length delimited. Does not implicitly {@link rings_node.FetchTopicMessagesRequest.verify|verify} messages.
         * @param message FetchTopicMessagesRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IFetchTopicMessagesRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FetchTopicMessagesRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchTopicMessagesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.FetchTopicMessagesRequest;

        /**
         * Decodes a FetchTopicMessagesRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchTopicMessagesRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.FetchTopicMessagesRequest;

        /**
         * Verifies a FetchTopicMessagesRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FetchTopicMessagesRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FetchTopicMessagesRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.FetchTopicMessagesRequest;

        /**
         * Creates a plain object from a FetchTopicMessagesRequest message. Also converts values to other types if specified.
         * @param message FetchTopicMessagesRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.FetchTopicMessagesRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FetchTopicMessagesRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for FetchTopicMessagesRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a FetchTopicMessagesResponse. */
    interface IFetchTopicMessagesResponse {

        /** FetchTopicMessagesResponse data */
        data?: (string[]|null);
    }

    /** Represents a FetchTopicMessagesResponse. */
    class FetchTopicMessagesResponse implements IFetchTopicMessagesResponse {

        /**
         * Constructs a new FetchTopicMessagesResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IFetchTopicMessagesResponse);

        /** FetchTopicMessagesResponse data. */
        public data: string[];

        /**
         * Creates a new FetchTopicMessagesResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FetchTopicMessagesResponse instance
         */
        public static create(properties?: rings_node.IFetchTopicMessagesResponse): rings_node.FetchTopicMessagesResponse;

        /**
         * Encodes the specified FetchTopicMessagesResponse message. Does not implicitly {@link rings_node.FetchTopicMessagesResponse.verify|verify} messages.
         * @param message FetchTopicMessagesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IFetchTopicMessagesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FetchTopicMessagesResponse message, length delimited. Does not implicitly {@link rings_node.FetchTopicMessagesResponse.verify|verify} messages.
         * @param message FetchTopicMessagesResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IFetchTopicMessagesResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FetchTopicMessagesResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FetchTopicMessagesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.FetchTopicMessagesResponse;

        /**
         * Decodes a FetchTopicMessagesResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FetchTopicMessagesResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.FetchTopicMessagesResponse;

        /**
         * Verifies a FetchTopicMessagesResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FetchTopicMessagesResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FetchTopicMessagesResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.FetchTopicMessagesResponse;

        /**
         * Creates a plain object from a FetchTopicMessagesResponse message. Also converts values to other types if specified.
         * @param message FetchTopicMessagesResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.FetchTopicMessagesResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FetchTopicMessagesResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for FetchTopicMessagesResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a RegisterServiceRequest. */
    interface IRegisterServiceRequest {

        /** RegisterServiceRequest name */
        name?: (string|null);
    }

    /** Represents a RegisterServiceRequest. */
    class RegisterServiceRequest implements IRegisterServiceRequest {

        /**
         * Constructs a new RegisterServiceRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IRegisterServiceRequest);

        /** RegisterServiceRequest name. */
        public name: string;

        /**
         * Creates a new RegisterServiceRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RegisterServiceRequest instance
         */
        public static create(properties?: rings_node.IRegisterServiceRequest): rings_node.RegisterServiceRequest;

        /**
         * Encodes the specified RegisterServiceRequest message. Does not implicitly {@link rings_node.RegisterServiceRequest.verify|verify} messages.
         * @param message RegisterServiceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IRegisterServiceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RegisterServiceRequest message, length delimited. Does not implicitly {@link rings_node.RegisterServiceRequest.verify|verify} messages.
         * @param message RegisterServiceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IRegisterServiceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RegisterServiceRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RegisterServiceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.RegisterServiceRequest;

        /**
         * Decodes a RegisterServiceRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RegisterServiceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.RegisterServiceRequest;

        /**
         * Verifies a RegisterServiceRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RegisterServiceRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RegisterServiceRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.RegisterServiceRequest;

        /**
         * Creates a plain object from a RegisterServiceRequest message. Also converts values to other types if specified.
         * @param message RegisterServiceRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.RegisterServiceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RegisterServiceRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for RegisterServiceRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a RegisterServiceResponse. */
    interface IRegisterServiceResponse {
    }

    /** Represents a RegisterServiceResponse. */
    class RegisterServiceResponse implements IRegisterServiceResponse {

        /**
         * Constructs a new RegisterServiceResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IRegisterServiceResponse);

        /**
         * Creates a new RegisterServiceResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns RegisterServiceResponse instance
         */
        public static create(properties?: rings_node.IRegisterServiceResponse): rings_node.RegisterServiceResponse;

        /**
         * Encodes the specified RegisterServiceResponse message. Does not implicitly {@link rings_node.RegisterServiceResponse.verify|verify} messages.
         * @param message RegisterServiceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IRegisterServiceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified RegisterServiceResponse message, length delimited. Does not implicitly {@link rings_node.RegisterServiceResponse.verify|verify} messages.
         * @param message RegisterServiceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IRegisterServiceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a RegisterServiceResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns RegisterServiceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.RegisterServiceResponse;

        /**
         * Decodes a RegisterServiceResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns RegisterServiceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.RegisterServiceResponse;

        /**
         * Verifies a RegisterServiceResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a RegisterServiceResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns RegisterServiceResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.RegisterServiceResponse;

        /**
         * Creates a plain object from a RegisterServiceResponse message. Also converts values to other types if specified.
         * @param message RegisterServiceResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.RegisterServiceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this RegisterServiceResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for RegisterServiceResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a LookupServiceRequest. */
    interface ILookupServiceRequest {

        /** LookupServiceRequest name */
        name?: (string|null);
    }

    /** Represents a LookupServiceRequest. */
    class LookupServiceRequest implements ILookupServiceRequest {

        /**
         * Constructs a new LookupServiceRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.ILookupServiceRequest);

        /** LookupServiceRequest name. */
        public name: string;

        /**
         * Creates a new LookupServiceRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LookupServiceRequest instance
         */
        public static create(properties?: rings_node.ILookupServiceRequest): rings_node.LookupServiceRequest;

        /**
         * Encodes the specified LookupServiceRequest message. Does not implicitly {@link rings_node.LookupServiceRequest.verify|verify} messages.
         * @param message LookupServiceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.ILookupServiceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LookupServiceRequest message, length delimited. Does not implicitly {@link rings_node.LookupServiceRequest.verify|verify} messages.
         * @param message LookupServiceRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.ILookupServiceRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LookupServiceRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LookupServiceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.LookupServiceRequest;

        /**
         * Decodes a LookupServiceRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LookupServiceRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.LookupServiceRequest;

        /**
         * Verifies a LookupServiceRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LookupServiceRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LookupServiceRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.LookupServiceRequest;

        /**
         * Creates a plain object from a LookupServiceRequest message. Also converts values to other types if specified.
         * @param message LookupServiceRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.LookupServiceRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LookupServiceRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for LookupServiceRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a LookupServiceResponse. */
    interface ILookupServiceResponse {

        /** LookupServiceResponse dids */
        dids?: (string[]|null);
    }

    /** Represents a LookupServiceResponse. */
    class LookupServiceResponse implements ILookupServiceResponse {

        /**
         * Constructs a new LookupServiceResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.ILookupServiceResponse);

        /** LookupServiceResponse dids. */
        public dids: string[];

        /**
         * Creates a new LookupServiceResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns LookupServiceResponse instance
         */
        public static create(properties?: rings_node.ILookupServiceResponse): rings_node.LookupServiceResponse;

        /**
         * Encodes the specified LookupServiceResponse message. Does not implicitly {@link rings_node.LookupServiceResponse.verify|verify} messages.
         * @param message LookupServiceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.ILookupServiceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified LookupServiceResponse message, length delimited. Does not implicitly {@link rings_node.LookupServiceResponse.verify|verify} messages.
         * @param message LookupServiceResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.ILookupServiceResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a LookupServiceResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns LookupServiceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.LookupServiceResponse;

        /**
         * Decodes a LookupServiceResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns LookupServiceResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.LookupServiceResponse;

        /**
         * Verifies a LookupServiceResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a LookupServiceResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns LookupServiceResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.LookupServiceResponse;

        /**
         * Creates a plain object from a LookupServiceResponse message. Also converts values to other types if specified.
         * @param message LookupServiceResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.LookupServiceResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this LookupServiceResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for LookupServiceResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a NodeInfoRequest. */
    interface INodeInfoRequest {
    }

    /** Represents a NodeInfoRequest. */
    class NodeInfoRequest implements INodeInfoRequest {

        /**
         * Constructs a new NodeInfoRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.INodeInfoRequest);

        /**
         * Creates a new NodeInfoRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NodeInfoRequest instance
         */
        public static create(properties?: rings_node.INodeInfoRequest): rings_node.NodeInfoRequest;

        /**
         * Encodes the specified NodeInfoRequest message. Does not implicitly {@link rings_node.NodeInfoRequest.verify|verify} messages.
         * @param message NodeInfoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.INodeInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NodeInfoRequest message, length delimited. Does not implicitly {@link rings_node.NodeInfoRequest.verify|verify} messages.
         * @param message NodeInfoRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.INodeInfoRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NodeInfoRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NodeInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.NodeInfoRequest;

        /**
         * Decodes a NodeInfoRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NodeInfoRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.NodeInfoRequest;

        /**
         * Verifies a NodeInfoRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NodeInfoRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NodeInfoRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.NodeInfoRequest;

        /**
         * Creates a plain object from a NodeInfoRequest message. Also converts values to other types if specified.
         * @param message NodeInfoRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.NodeInfoRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NodeInfoRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for NodeInfoRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a FingerTableRange. */
    interface IFingerTableRange {

        /** FingerTableRange did */
        did?: (string|null);

        /** FingerTableRange start */
        start?: (number|Long|null);

        /** FingerTableRange end */
        end?: (number|Long|null);
    }

    /** Represents a FingerTableRange. */
    class FingerTableRange implements IFingerTableRange {

        /**
         * Constructs a new FingerTableRange.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IFingerTableRange);

        /** FingerTableRange did. */
        public did?: (string|null);

        /** FingerTableRange start. */
        public start: (number|Long);

        /** FingerTableRange end. */
        public end: (number|Long);

        /** FingerTableRange _did. */
        public _did?: "did";

        /**
         * Creates a new FingerTableRange instance using the specified properties.
         * @param [properties] Properties to set
         * @returns FingerTableRange instance
         */
        public static create(properties?: rings_node.IFingerTableRange): rings_node.FingerTableRange;

        /**
         * Encodes the specified FingerTableRange message. Does not implicitly {@link rings_node.FingerTableRange.verify|verify} messages.
         * @param message FingerTableRange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IFingerTableRange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified FingerTableRange message, length delimited. Does not implicitly {@link rings_node.FingerTableRange.verify|verify} messages.
         * @param message FingerTableRange message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IFingerTableRange, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a FingerTableRange message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns FingerTableRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.FingerTableRange;

        /**
         * Decodes a FingerTableRange message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns FingerTableRange
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.FingerTableRange;

        /**
         * Verifies a FingerTableRange message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a FingerTableRange message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns FingerTableRange
         */
        public static fromObject(object: { [k: string]: any }): rings_node.FingerTableRange;

        /**
         * Creates a plain object from a FingerTableRange message. Also converts values to other types if specified.
         * @param message FingerTableRange
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.FingerTableRange, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this FingerTableRange to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for FingerTableRange
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a DhtInfo. */
    interface IDhtInfo {

        /** DhtInfo did */
        did?: (string|null);

        /** DhtInfo successors */
        successors?: (string[]|null);

        /** DhtInfo predecessor */
        predecessor?: (string|null);

        /** DhtInfo finger_table_ranges */
        finger_table_ranges?: (rings_node.IFingerTableRange[]|null);
    }

    /** Represents a DhtInfo. */
    class DhtInfo implements IDhtInfo {

        /**
         * Constructs a new DhtInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IDhtInfo);

        /** DhtInfo did. */
        public did: string;

        /** DhtInfo successors. */
        public successors: string[];

        /** DhtInfo predecessor. */
        public predecessor?: (string|null);

        /** DhtInfo finger_table_ranges. */
        public finger_table_ranges: rings_node.IFingerTableRange[];

        /** DhtInfo _predecessor. */
        public _predecessor?: "predecessor";

        /**
         * Creates a new DhtInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns DhtInfo instance
         */
        public static create(properties?: rings_node.IDhtInfo): rings_node.DhtInfo;

        /**
         * Encodes the specified DhtInfo message. Does not implicitly {@link rings_node.DhtInfo.verify|verify} messages.
         * @param message DhtInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IDhtInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified DhtInfo message, length delimited. Does not implicitly {@link rings_node.DhtInfo.verify|verify} messages.
         * @param message DhtInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IDhtInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a DhtInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns DhtInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.DhtInfo;

        /**
         * Decodes a DhtInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns DhtInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.DhtInfo;

        /**
         * Verifies a DhtInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a DhtInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns DhtInfo
         */
        public static fromObject(object: { [k: string]: any }): rings_node.DhtInfo;

        /**
         * Creates a plain object from a DhtInfo message. Also converts values to other types if specified.
         * @param message DhtInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.DhtInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this DhtInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for DhtInfo
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a StorageValue. */
    interface IStorageValue {

        /** StorageValue did */
        did?: (string|null);

        /** StorageValue kind */
        kind?: (string|null);

        /** StorageValue data */
        data?: (string[]|null);
    }

    /** Represents a StorageValue. */
    class StorageValue implements IStorageValue {

        /**
         * Constructs a new StorageValue.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IStorageValue);

        /** StorageValue did. */
        public did: string;

        /** StorageValue kind. */
        public kind: string;

        /** StorageValue data. */
        public data: string[];

        /**
         * Creates a new StorageValue instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StorageValue instance
         */
        public static create(properties?: rings_node.IStorageValue): rings_node.StorageValue;

        /**
         * Encodes the specified StorageValue message. Does not implicitly {@link rings_node.StorageValue.verify|verify} messages.
         * @param message StorageValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IStorageValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StorageValue message, length delimited. Does not implicitly {@link rings_node.StorageValue.verify|verify} messages.
         * @param message StorageValue message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IStorageValue, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StorageValue message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StorageValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.StorageValue;

        /**
         * Decodes a StorageValue message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StorageValue
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.StorageValue;

        /**
         * Verifies a StorageValue message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StorageValue message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StorageValue
         */
        public static fromObject(object: { [k: string]: any }): rings_node.StorageValue;

        /**
         * Creates a plain object from a StorageValue message. Also converts values to other types if specified.
         * @param message StorageValue
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.StorageValue, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StorageValue to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for StorageValue
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a StorageItem. */
    interface IStorageItem {

        /** StorageItem key */
        key?: (string|null);

        /** StorageItem value */
        value?: (rings_node.IStorageValue|null);
    }

    /** Represents a StorageItem. */
    class StorageItem implements IStorageItem {

        /**
         * Constructs a new StorageItem.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IStorageItem);

        /** StorageItem key. */
        public key: string;

        /** StorageItem value. */
        public value?: (rings_node.IStorageValue|null);

        /**
         * Creates a new StorageItem instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StorageItem instance
         */
        public static create(properties?: rings_node.IStorageItem): rings_node.StorageItem;

        /**
         * Encodes the specified StorageItem message. Does not implicitly {@link rings_node.StorageItem.verify|verify} messages.
         * @param message StorageItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IStorageItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StorageItem message, length delimited. Does not implicitly {@link rings_node.StorageItem.verify|verify} messages.
         * @param message StorageItem message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IStorageItem, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StorageItem message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StorageItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.StorageItem;

        /**
         * Decodes a StorageItem message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StorageItem
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.StorageItem;

        /**
         * Verifies a StorageItem message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StorageItem message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StorageItem
         */
        public static fromObject(object: { [k: string]: any }): rings_node.StorageItem;

        /**
         * Creates a plain object from a StorageItem message. Also converts values to other types if specified.
         * @param message StorageItem
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.StorageItem, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StorageItem to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for StorageItem
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a StorageInfo. */
    interface IStorageInfo {

        /** StorageInfo items */
        items?: (rings_node.IStorageItem[]|null);
    }

    /** Represents a StorageInfo. */
    class StorageInfo implements IStorageInfo {

        /**
         * Constructs a new StorageInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.IStorageInfo);

        /** StorageInfo items. */
        public items: rings_node.IStorageItem[];

        /**
         * Creates a new StorageInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns StorageInfo instance
         */
        public static create(properties?: rings_node.IStorageInfo): rings_node.StorageInfo;

        /**
         * Encodes the specified StorageInfo message. Does not implicitly {@link rings_node.StorageInfo.verify|verify} messages.
         * @param message StorageInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.IStorageInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified StorageInfo message, length delimited. Does not implicitly {@link rings_node.StorageInfo.verify|verify} messages.
         * @param message StorageInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.IStorageInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a StorageInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns StorageInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.StorageInfo;

        /**
         * Decodes a StorageInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns StorageInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.StorageInfo;

        /**
         * Verifies a StorageInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a StorageInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns StorageInfo
         */
        public static fromObject(object: { [k: string]: any }): rings_node.StorageInfo;

        /**
         * Creates a plain object from a StorageInfo message. Also converts values to other types if specified.
         * @param message StorageInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.StorageInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this StorageInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for StorageInfo
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a SwarmInfo. */
    interface ISwarmInfo {

        /** SwarmInfo peers */
        peers?: (rings_node.IPeerInfo[]|null);

        /** SwarmInfo dht */
        dht?: (rings_node.IDhtInfo|null);

        /** SwarmInfo persistence_storage */
        persistence_storage?: (rings_node.IStorageInfo|null);

        /** SwarmInfo cache_storage */
        cache_storage?: (rings_node.IStorageInfo|null);
    }

    /** Represents a SwarmInfo. */
    class SwarmInfo implements ISwarmInfo {

        /**
         * Constructs a new SwarmInfo.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.ISwarmInfo);

        /** SwarmInfo peers. */
        public peers: rings_node.IPeerInfo[];

        /** SwarmInfo dht. */
        public dht?: (rings_node.IDhtInfo|null);

        /** SwarmInfo persistence_storage. */
        public persistence_storage?: (rings_node.IStorageInfo|null);

        /** SwarmInfo cache_storage. */
        public cache_storage?: (rings_node.IStorageInfo|null);

        /**
         * Creates a new SwarmInfo instance using the specified properties.
         * @param [properties] Properties to set
         * @returns SwarmInfo instance
         */
        public static create(properties?: rings_node.ISwarmInfo): rings_node.SwarmInfo;

        /**
         * Encodes the specified SwarmInfo message. Does not implicitly {@link rings_node.SwarmInfo.verify|verify} messages.
         * @param message SwarmInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.ISwarmInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified SwarmInfo message, length delimited. Does not implicitly {@link rings_node.SwarmInfo.verify|verify} messages.
         * @param message SwarmInfo message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.ISwarmInfo, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a SwarmInfo message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns SwarmInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.SwarmInfo;

        /**
         * Decodes a SwarmInfo message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns SwarmInfo
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.SwarmInfo;

        /**
         * Verifies a SwarmInfo message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a SwarmInfo message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns SwarmInfo
         */
        public static fromObject(object: { [k: string]: any }): rings_node.SwarmInfo;

        /**
         * Creates a plain object from a SwarmInfo message. Also converts values to other types if specified.
         * @param message SwarmInfo
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.SwarmInfo, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this SwarmInfo to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for SwarmInfo
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a NodeInfoResponse. */
    interface INodeInfoResponse {

        /** NodeInfoResponse version */
        version?: (string|null);

        /** NodeInfoResponse swarm */
        swarm?: (rings_node.ISwarmInfo|null);
    }

    /** Represents a NodeInfoResponse. */
    class NodeInfoResponse implements INodeInfoResponse {

        /**
         * Constructs a new NodeInfoResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.INodeInfoResponse);

        /** NodeInfoResponse version. */
        public version: string;

        /** NodeInfoResponse swarm. */
        public swarm?: (rings_node.ISwarmInfo|null);

        /**
         * Creates a new NodeInfoResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NodeInfoResponse instance
         */
        public static create(properties?: rings_node.INodeInfoResponse): rings_node.NodeInfoResponse;

        /**
         * Encodes the specified NodeInfoResponse message. Does not implicitly {@link rings_node.NodeInfoResponse.verify|verify} messages.
         * @param message NodeInfoResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.INodeInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NodeInfoResponse message, length delimited. Does not implicitly {@link rings_node.NodeInfoResponse.verify|verify} messages.
         * @param message NodeInfoResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.INodeInfoResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NodeInfoResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NodeInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.NodeInfoResponse;

        /**
         * Decodes a NodeInfoResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NodeInfoResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.NodeInfoResponse;

        /**
         * Verifies a NodeInfoResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NodeInfoResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NodeInfoResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.NodeInfoResponse;

        /**
         * Creates a plain object from a NodeInfoResponse message. Also converts values to other types if specified.
         * @param message NodeInfoResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.NodeInfoResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NodeInfoResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for NodeInfoResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a NodeDidRequest. */
    interface INodeDidRequest {
    }

    /** Represents a NodeDidRequest. */
    class NodeDidRequest implements INodeDidRequest {

        /**
         * Constructs a new NodeDidRequest.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.INodeDidRequest);

        /**
         * Creates a new NodeDidRequest instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NodeDidRequest instance
         */
        public static create(properties?: rings_node.INodeDidRequest): rings_node.NodeDidRequest;

        /**
         * Encodes the specified NodeDidRequest message. Does not implicitly {@link rings_node.NodeDidRequest.verify|verify} messages.
         * @param message NodeDidRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.INodeDidRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NodeDidRequest message, length delimited. Does not implicitly {@link rings_node.NodeDidRequest.verify|verify} messages.
         * @param message NodeDidRequest message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.INodeDidRequest, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NodeDidRequest message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NodeDidRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.NodeDidRequest;

        /**
         * Decodes a NodeDidRequest message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NodeDidRequest
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.NodeDidRequest;

        /**
         * Verifies a NodeDidRequest message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NodeDidRequest message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NodeDidRequest
         */
        public static fromObject(object: { [k: string]: any }): rings_node.NodeDidRequest;

        /**
         * Creates a plain object from a NodeDidRequest message. Also converts values to other types if specified.
         * @param message NodeDidRequest
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.NodeDidRequest, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NodeDidRequest to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for NodeDidRequest
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Properties of a NodeDidResponse. */
    interface INodeDidResponse {

        /** NodeDidResponse did */
        did?: (string|null);
    }

    /** Represents a NodeDidResponse. */
    class NodeDidResponse implements INodeDidResponse {

        /**
         * Constructs a new NodeDidResponse.
         * @param [properties] Properties to set
         */
        constructor(properties?: rings_node.INodeDidResponse);

        /** NodeDidResponse did. */
        public did: string;

        /**
         * Creates a new NodeDidResponse instance using the specified properties.
         * @param [properties] Properties to set
         * @returns NodeDidResponse instance
         */
        public static create(properties?: rings_node.INodeDidResponse): rings_node.NodeDidResponse;

        /**
         * Encodes the specified NodeDidResponse message. Does not implicitly {@link rings_node.NodeDidResponse.verify|verify} messages.
         * @param message NodeDidResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encode(message: rings_node.INodeDidResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Encodes the specified NodeDidResponse message, length delimited. Does not implicitly {@link rings_node.NodeDidResponse.verify|verify} messages.
         * @param message NodeDidResponse message or plain object to encode
         * @param [writer] Writer to encode to
         * @returns Writer
         */
        public static encodeDelimited(message: rings_node.INodeDidResponse, writer?: $protobuf.Writer): $protobuf.Writer;

        /**
         * Decodes a NodeDidResponse message from the specified reader or buffer.
         * @param reader Reader or buffer to decode from
         * @param [length] Message length if known beforehand
         * @returns NodeDidResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decode(reader: ($protobuf.Reader|Uint8Array), length?: number): rings_node.NodeDidResponse;

        /**
         * Decodes a NodeDidResponse message from the specified reader or buffer, length delimited.
         * @param reader Reader or buffer to decode from
         * @returns NodeDidResponse
         * @throws {Error} If the payload is not a reader or valid buffer
         * @throws {$protobuf.util.ProtocolError} If required fields are missing
         */
        public static decodeDelimited(reader: ($protobuf.Reader|Uint8Array)): rings_node.NodeDidResponse;

        /**
         * Verifies a NodeDidResponse message.
         * @param message Plain object to verify
         * @returns `null` if valid, otherwise the reason why it is not
         */
        public static verify(message: { [k: string]: any }): (string|null);

        /**
         * Creates a NodeDidResponse message from a plain object. Also converts values to their respective internal types.
         * @param object Plain object
         * @returns NodeDidResponse
         */
        public static fromObject(object: { [k: string]: any }): rings_node.NodeDidResponse;

        /**
         * Creates a plain object from a NodeDidResponse message. Also converts values to other types if specified.
         * @param message NodeDidResponse
         * @param [options] Conversion options
         * @returns Plain object
         */
        public static toObject(message: rings_node.NodeDidResponse, options?: $protobuf.IConversionOptions): { [k: string]: any };

        /**
         * Converts this NodeDidResponse to JSON.
         * @returns JSON object
         */
        public toJSON(): { [k: string]: any };

        /**
         * Gets the default type url for NodeDidResponse
         * @param [typeUrlPrefix] your custom typeUrlPrefix(default "type.googleapis.com")
         * @returns The default type url
         */
        public static getTypeUrl(typeUrlPrefix?: string): string;
    }

    /** Represents an InternalService */
    class InternalService extends $protobuf.rpc.Service {

        /**
         * Constructs a new InternalService service.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         */
        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

        /**
         * Creates new InternalService service using the specified rpc implementation.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         * @returns RPC service. Useful where requests and/or responses are streamed.
         */
        public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): InternalService;

        /**
         * Calls ConnectPeerViaHttp.
         * @param request ConnectPeerViaHttpRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and ConnectPeerViaHttpResponse
         */
        public connectPeerViaHttp(request: rings_node.IConnectPeerViaHttpRequest, callback: rings_node.InternalService.ConnectPeerViaHttpCallback): void;

        /**
         * Calls ConnectPeerViaHttp.
         * @param request ConnectPeerViaHttpRequest message or plain object
         * @returns Promise
         */
        public connectPeerViaHttp(request: rings_node.IConnectPeerViaHttpRequest): Promise<rings_node.ConnectPeerViaHttpResponse>;

        /**
         * Calls ConnectWithDid.
         * @param request ConnectWithDidRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and ConnectWithDidResponse
         */
        public connectWithDid(request: rings_node.IConnectWithDidRequest, callback: rings_node.InternalService.ConnectWithDidCallback): void;

        /**
         * Calls ConnectWithDid.
         * @param request ConnectWithDidRequest message or plain object
         * @returns Promise
         */
        public connectWithDid(request: rings_node.IConnectWithDidRequest): Promise<rings_node.ConnectWithDidResponse>;

        /**
         * Calls ConnectWithSeed.
         * @param request ConnectWithSeedRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and ConnectWithSeedResponse
         */
        public connectWithSeed(request: rings_node.IConnectWithSeedRequest, callback: rings_node.InternalService.ConnectWithSeedCallback): void;

        /**
         * Calls ConnectWithSeed.
         * @param request ConnectWithSeedRequest message or plain object
         * @returns Promise
         */
        public connectWithSeed(request: rings_node.IConnectWithSeedRequest): Promise<rings_node.ConnectWithSeedResponse>;

        /**
         * Calls ListPeers.
         * @param request ListPeersRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and ListPeersResponse
         */
        public listPeers(request: rings_node.IListPeersRequest, callback: rings_node.InternalService.ListPeersCallback): void;

        /**
         * Calls ListPeers.
         * @param request ListPeersRequest message or plain object
         * @returns Promise
         */
        public listPeers(request: rings_node.IListPeersRequest): Promise<rings_node.ListPeersResponse>;

        /**
         * Calls CreateOffer.
         * @param request CreateOfferRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and CreateOfferResponse
         */
        public createOffer(request: rings_node.ICreateOfferRequest, callback: rings_node.InternalService.CreateOfferCallback): void;

        /**
         * Calls CreateOffer.
         * @param request CreateOfferRequest message or plain object
         * @returns Promise
         */
        public createOffer(request: rings_node.ICreateOfferRequest): Promise<rings_node.CreateOfferResponse>;

        /**
         * Calls AnswerOffer.
         * @param request AnswerOfferRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and AnswerOfferResponse
         */
        public answerOffer(request: rings_node.IAnswerOfferRequest, callback: rings_node.InternalService.AnswerOfferCallback): void;

        /**
         * Calls AnswerOffer.
         * @param request AnswerOfferRequest message or plain object
         * @returns Promise
         */
        public answerOffer(request: rings_node.IAnswerOfferRequest): Promise<rings_node.AnswerOfferResponse>;

        /**
         * Calls AcceptAnswer.
         * @param request AcceptAnswerRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and AcceptAnswerResponse
         */
        public acceptAnswer(request: rings_node.IAcceptAnswerRequest, callback: rings_node.InternalService.AcceptAnswerCallback): void;

        /**
         * Calls AcceptAnswer.
         * @param request AcceptAnswerRequest message or plain object
         * @returns Promise
         */
        public acceptAnswer(request: rings_node.IAcceptAnswerRequest): Promise<rings_node.AcceptAnswerResponse>;

        /**
         * Calls Disconnect.
         * @param request DisconnectRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and DisconnectResponse
         */
        public disconnect(request: rings_node.IDisconnectRequest, callback: rings_node.InternalService.DisconnectCallback): void;

        /**
         * Calls Disconnect.
         * @param request DisconnectRequest message or plain object
         * @returns Promise
         */
        public disconnect(request: rings_node.IDisconnectRequest): Promise<rings_node.DisconnectResponse>;

        /**
         * Calls SendCustomMessage.
         * @param request SendCustomMessageRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and SendCustomMessageResponse
         */
        public sendCustomMessage(request: rings_node.ISendCustomMessageRequest, callback: rings_node.InternalService.SendCustomMessageCallback): void;

        /**
         * Calls SendCustomMessage.
         * @param request SendCustomMessageRequest message or plain object
         * @returns Promise
         */
        public sendCustomMessage(request: rings_node.ISendCustomMessageRequest): Promise<rings_node.SendCustomMessageResponse>;

        /**
         * Calls SendBackendMessage.
         * @param request SendBackendMessageRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and SendBackendMessageResponse
         */
        public sendBackendMessage(request: rings_node.ISendBackendMessageRequest, callback: rings_node.InternalService.SendBackendMessageCallback): void;

        /**
         * Calls SendBackendMessage.
         * @param request SendBackendMessageRequest message or plain object
         * @returns Promise
         */
        public sendBackendMessage(request: rings_node.ISendBackendMessageRequest): Promise<rings_node.SendBackendMessageResponse>;

        /**
         * Calls PublishMessageToTopic.
         * @param request PublishMessageToTopicRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and PublishMessageToTopicResponse
         */
        public publishMessageToTopic(request: rings_node.IPublishMessageToTopicRequest, callback: rings_node.InternalService.PublishMessageToTopicCallback): void;

        /**
         * Calls PublishMessageToTopic.
         * @param request PublishMessageToTopicRequest message or plain object
         * @returns Promise
         */
        public publishMessageToTopic(request: rings_node.IPublishMessageToTopicRequest): Promise<rings_node.PublishMessageToTopicResponse>;

        /**
         * Calls FetchTopicMessages.
         * @param request FetchTopicMessagesRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and FetchTopicMessagesResponse
         */
        public fetchTopicMessages(request: rings_node.IFetchTopicMessagesRequest, callback: rings_node.InternalService.FetchTopicMessagesCallback): void;

        /**
         * Calls FetchTopicMessages.
         * @param request FetchTopicMessagesRequest message or plain object
         * @returns Promise
         */
        public fetchTopicMessages(request: rings_node.IFetchTopicMessagesRequest): Promise<rings_node.FetchTopicMessagesResponse>;

        /**
         * Calls RegisterService.
         * @param request RegisterServiceRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and RegisterServiceResponse
         */
        public registerService(request: rings_node.IRegisterServiceRequest, callback: rings_node.InternalService.RegisterServiceCallback): void;

        /**
         * Calls RegisterService.
         * @param request RegisterServiceRequest message or plain object
         * @returns Promise
         */
        public registerService(request: rings_node.IRegisterServiceRequest): Promise<rings_node.RegisterServiceResponse>;

        /**
         * Calls LookupService.
         * @param request LookupServiceRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and LookupServiceResponse
         */
        public lookupService(request: rings_node.ILookupServiceRequest, callback: rings_node.InternalService.LookupServiceCallback): void;

        /**
         * Calls LookupService.
         * @param request LookupServiceRequest message or plain object
         * @returns Promise
         */
        public lookupService(request: rings_node.ILookupServiceRequest): Promise<rings_node.LookupServiceResponse>;

        /**
         * Calls NodeInfo.
         * @param request NodeInfoRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and NodeInfoResponse
         */
        public nodeInfo(request: rings_node.INodeInfoRequest, callback: rings_node.InternalService.NodeInfoCallback): void;

        /**
         * Calls NodeInfo.
         * @param request NodeInfoRequest message or plain object
         * @returns Promise
         */
        public nodeInfo(request: rings_node.INodeInfoRequest): Promise<rings_node.NodeInfoResponse>;

        /**
         * Calls NodeDid.
         * @param request NodeDidRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and NodeDidResponse
         */
        public nodeDid(request: rings_node.INodeDidRequest, callback: rings_node.InternalService.NodeDidCallback): void;

        /**
         * Calls NodeDid.
         * @param request NodeDidRequest message or plain object
         * @returns Promise
         */
        public nodeDid(request: rings_node.INodeDidRequest): Promise<rings_node.NodeDidResponse>;
    }

    namespace InternalService {

        /**
         * Callback as used by {@link rings_node.InternalService#connectPeerViaHttp}.
         * @param error Error, if any
         * @param [response] ConnectPeerViaHttpResponse
         */
        type ConnectPeerViaHttpCallback = (error: (Error|null), response?: rings_node.ConnectPeerViaHttpResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#connectWithDid}.
         * @param error Error, if any
         * @param [response] ConnectWithDidResponse
         */
        type ConnectWithDidCallback = (error: (Error|null), response?: rings_node.ConnectWithDidResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#connectWithSeed}.
         * @param error Error, if any
         * @param [response] ConnectWithSeedResponse
         */
        type ConnectWithSeedCallback = (error: (Error|null), response?: rings_node.ConnectWithSeedResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#listPeers}.
         * @param error Error, if any
         * @param [response] ListPeersResponse
         */
        type ListPeersCallback = (error: (Error|null), response?: rings_node.ListPeersResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#createOffer}.
         * @param error Error, if any
         * @param [response] CreateOfferResponse
         */
        type CreateOfferCallback = (error: (Error|null), response?: rings_node.CreateOfferResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#answerOffer}.
         * @param error Error, if any
         * @param [response] AnswerOfferResponse
         */
        type AnswerOfferCallback = (error: (Error|null), response?: rings_node.AnswerOfferResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#acceptAnswer}.
         * @param error Error, if any
         * @param [response] AcceptAnswerResponse
         */
        type AcceptAnswerCallback = (error: (Error|null), response?: rings_node.AcceptAnswerResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#disconnect}.
         * @param error Error, if any
         * @param [response] DisconnectResponse
         */
        type DisconnectCallback = (error: (Error|null), response?: rings_node.DisconnectResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#sendCustomMessage}.
         * @param error Error, if any
         * @param [response] SendCustomMessageResponse
         */
        type SendCustomMessageCallback = (error: (Error|null), response?: rings_node.SendCustomMessageResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#sendBackendMessage}.
         * @param error Error, if any
         * @param [response] SendBackendMessageResponse
         */
        type SendBackendMessageCallback = (error: (Error|null), response?: rings_node.SendBackendMessageResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#publishMessageToTopic}.
         * @param error Error, if any
         * @param [response] PublishMessageToTopicResponse
         */
        type PublishMessageToTopicCallback = (error: (Error|null), response?: rings_node.PublishMessageToTopicResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#fetchTopicMessages}.
         * @param error Error, if any
         * @param [response] FetchTopicMessagesResponse
         */
        type FetchTopicMessagesCallback = (error: (Error|null), response?: rings_node.FetchTopicMessagesResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#registerService}.
         * @param error Error, if any
         * @param [response] RegisterServiceResponse
         */
        type RegisterServiceCallback = (error: (Error|null), response?: rings_node.RegisterServiceResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#lookupService}.
         * @param error Error, if any
         * @param [response] LookupServiceResponse
         */
        type LookupServiceCallback = (error: (Error|null), response?: rings_node.LookupServiceResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#nodeInfo}.
         * @param error Error, if any
         * @param [response] NodeInfoResponse
         */
        type NodeInfoCallback = (error: (Error|null), response?: rings_node.NodeInfoResponse) => void;

        /**
         * Callback as used by {@link rings_node.InternalService#nodeDid}.
         * @param error Error, if any
         * @param [response] NodeDidResponse
         */
        type NodeDidCallback = (error: (Error|null), response?: rings_node.NodeDidResponse) => void;
    }

    /** Represents an ExternalService */
    class ExternalService extends $protobuf.rpc.Service {

        /**
         * Constructs a new ExternalService service.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         */
        constructor(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean);

        /**
         * Creates new ExternalService service using the specified rpc implementation.
         * @param rpcImpl RPC implementation
         * @param [requestDelimited=false] Whether requests are length-delimited
         * @param [responseDelimited=false] Whether responses are length-delimited
         * @returns RPC service. Useful where requests and/or responses are streamed.
         */
        public static create(rpcImpl: $protobuf.RPCImpl, requestDelimited?: boolean, responseDelimited?: boolean): ExternalService;

        /**
         * Calls AnswerOffer.
         * @param request AnswerOfferRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and AnswerOfferResponse
         */
        public answerOffer(request: rings_node.IAnswerOfferRequest, callback: rings_node.ExternalService.AnswerOfferCallback): void;

        /**
         * Calls AnswerOffer.
         * @param request AnswerOfferRequest message or plain object
         * @returns Promise
         */
        public answerOffer(request: rings_node.IAnswerOfferRequest): Promise<rings_node.AnswerOfferResponse>;

        /**
         * Retrieve Node info
         * @param request NodeInfoRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and NodeInfoResponse
         */
        public nodeInfo(request: rings_node.INodeInfoRequest, callback: rings_node.ExternalService.NodeInfoCallback): void;

        /**
         * Retrieve Node info
         * @param request NodeInfoRequest message or plain object
         * @returns Promise
         */
        public nodeInfo(request: rings_node.INodeInfoRequest): Promise<rings_node.NodeInfoResponse>;

        /**
         * Retrieve Node DID
         * @param request NodeDidRequest message or plain object
         * @param callback Node-style callback called with the error, if any, and NodeDidResponse
         */
        public nodeDid(request: rings_node.INodeDidRequest, callback: rings_node.ExternalService.NodeDidCallback): void;

        /**
         * Retrieve Node DID
         * @param request NodeDidRequest message or plain object
         * @returns Promise
         */
        public nodeDid(request: rings_node.INodeDidRequest): Promise<rings_node.NodeDidResponse>;
    }

    namespace ExternalService {

        /**
         * Callback as used by {@link rings_node.ExternalService#answerOffer}.
         * @param error Error, if any
         * @param [response] AnswerOfferResponse
         */
        type AnswerOfferCallback = (error: (Error|null), response?: rings_node.AnswerOfferResponse) => void;

        /**
         * Callback as used by {@link rings_node.ExternalService#nodeInfo}.
         * @param error Error, if any
         * @param [response] NodeInfoResponse
         */
        type NodeInfoCallback = (error: (Error|null), response?: rings_node.NodeInfoResponse) => void;

        /**
         * Callback as used by {@link rings_node.ExternalService#nodeDid}.
         * @param error Error, if any
         * @param [response] NodeDidResponse
         */
        type NodeDidCallback = (error: (Error|null), response?: rings_node.NodeDidResponse) => void;
    }
}
